//Nicolas Nostas y Andrea Franco
//Ejercicio 5
#include "stdafx.h"
#include "conio.h"
#include <iostream>
#define Max 100

using namespace std;

void cargarVector (int V[], int n);
void ordenarVector (int V[], int n);
void mostrarVector (int V[], int n);
void posicion (int V[],int &n,int num);


void main (){
    int n,V[Max],num;
    cout<<"Ingrese el tamano del vector: ";
    cin>>n;
    cargarVector(V,n);
    ordenarVector(V,n);
    mostrarVector(V,n);
    do{
        cout<<"Ingrese un entero: ";
        cin>>num;
        posicion(V,n,num);
        mostrarVector(V,n);
    }while(n==0);    
    getch();    
}


void cargarVector (int V[], int n){
    int i;
    for(i=0;i<n;i++){
        cout<<"Introduzca elementos: ";
        cin>>V[i];
    }
}


void ordenarVector (int V[], int n){
    int i,j,aux;
    for(i=0;i<n-1;i++){
        for(j=i;j<n;j++){
            if(V[i]>V[j]){
                aux=V[i];
                V[i]=V[j];
                V[j]=aux;
            }
        }
    }
}



void mostrarVector (int V[Max], int n){
    int i;
    for(i=0;i<n;i++){
        cout<<V[i]<<"   ";
    }
}

void posicion (int V[], int &n,int num){
    int i,j;
    for(i=0;i<n;i++){
        if(V[i]>num){
            for(j=n;j>=i;j--)
                V[j]=V[j-1];
            break;
        
        }
    }
    V[i]=num;
    n++;
}
-------------------------------------------------------------------
#include"stdafx.h"
#include<iostream>
#include<conio.h>
#include<string>
#include<iomanip>
#define max 20
using namespace std;
struct estructura
{
string cad[max];
};
void cargar(estructura vec[], int n)
{
int i, j;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
cout<<"Ingrese dato:";
cin>>vec[i].cad[j];
}
cout<<endl;
}
}
void mostrar(estructura vec[], int n)
{
int i, j;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
cout<<setw(4)<<vec[i].cad[j];
}
cout<<endl;
}
}
void mostrarM(estructura mat[max][max], int n)
{
int i, j, k;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
for(k=0;k<n;k++)
{
cout<<setw(3)<<mat[i][j].cad[k];
}
cout<<setw(6);
}
cout<<endl;
}
}
void transformar(estructura vec[], estructura mat[max][max], int n)
{
int i, j, k;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
for(k=0;k<n;k++)
{
mat[i][j].cad[k]=vec[i].cad[j];
}
}
}
}
void main()
{
int n;
estructura vec[max], mat[max][max];
cout<<"Ingrese tamano estandar: ";
cin>>n;
cargar(vec, n);
mostrar(vec, n);
cout<<endl;
transformar(vec, mat, n);
mostrarM(mat, n);
getch();
}
